// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package queries

import (
	"context"
)

type Querier interface {
	CreateFileMeta(ctx context.Context, arg CreateFileMetaParams) error
	CreateNote(ctx context.Context, arg CreateNoteParams) (int, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (int, error)
	DeleteFileMetaByID(ctx context.Context, id int) error
	DeleteFileMetaByNoteID(ctx context.Context, arg DeleteFileMetaByNoteIDParams) error
	DeleteNote(ctx context.Context, arg DeleteNoteParams) error
	DeleteUser(ctx context.Context, id int) error
	FileMetasExistsByIDAndUserID(ctx context.Context, arg FileMetasExistsByIDAndUserIDParams) (bool, error)
	GetFileMetaByID(ctx context.Context, id int) (GetFileMetaByIDRow, error)
	GetFileMetaIDByID(ctx context.Context, arg GetFileMetaIDByIDParams) ([]int, error)
	GetFileMetaURI(ctx context.Context, id int) (string, error)
	GetFileMetas(ctx context.Context) ([]Filemeta, error)
	GetFileMetasIDByUserID(ctx context.Context, userID int) ([]int, error)
	GetNote(ctx context.Context, arg GetNoteParams) (Note, error)
	GetNotes(ctx context.Context, authorID int) ([]Note, error)
	GetUser(ctx context.Context, id int) (GetUserRow, error)
	GetUserLoginParams(ctx context.Context, username string) (GetUserLoginParamsRow, error)
	GetUsers(ctx context.Context) ([]User, error)
	UpdateNote(ctx context.Context, arg UpdateNoteParams) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) error
	UserExistsByID(ctx context.Context, id int) (bool, error)
}

var _ Querier = (*Queries)(nil)
